{
	"name": "SmartFoodsCustomerELT",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SmartFoodsDelimitedTextBlob",
						"type": "DatasetReference"
					},
					"name": "SmartFoodsCustomerStagingBlob"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "SmartFoodsCustomerSQLDW"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "AddFirstNameLastName"
				},
				{
					"name": "FixColumnNamesRemoveName"
				},
				{
					"name": "MD5Hash"
				},
				{
					"name": "CurrentRecordsOnly"
				},
				{
					"name": "JoinStagingToDWDim"
				},
				{
					"name": "SDC2Split"
				},
				{
					"name": "SelectNewInsert"
				},
				{
					"name": "SelectChangedUpdate"
				},
				{
					"name": "UpdateRecsBatchColumns"
				},
				{
					"name": "SelectChangedInsert"
				},
				{
					"name": "ALLInserts"
				},
				{
					"name": "SurrogateKey"
				},
				{
					"name": "MaxCustomerKey"
				},
				{
					"name": "InsertRecsBatchColumns"
				},
				{
					"name": "UnionInsertUpdates"
				}
			],
			"script": "parameters{\n\tMaxCustomerKey as integer (0),\n\tBatchDt as string (toString(currentDate()))\n}\nsource(output(\n\t\tloyalty_num as string,\n\t\tname as string,\n\t\temail as string,\n\t\tdob as date,\n\t\taddress as string,\n\t\tcity as string,\n\t\tstate as string,\n\t\tpostCode as string,\n\t\tmembersince as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn: 'sourceLineage') ~> SmartFoodsCustomerStagingBlob\nsource(output(\n\t\tCustomerKey as long,\n\t\tLoyaltyNum as string,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tEmail as string,\n\t\tAddress as string,\n\t\tPostCode as string,\n\t\tMemberSince as date,\n\t\tDob as date,\n\t\tRecInsertDt as date,\n\t\tRecStartDt as date,\n\t\tRecEndDt as date,\n\t\tRecCurrInd as boolean,\n\t\tsourceLineage as string,\n\t\tRecMd5Hash as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SmartFoodsCustomerSQLDW\nSmartFoodsCustomerStagingBlob derive(FirstName = split(name,\" \")[1],\n\t\tLastName = split(name,\" \")[2]) ~> AddFirstNameLastName\nAddFirstNameLastName select(mapColumn(\n\t\tiLoyaltyNum = loyalty_num,\n\t\tiEmail = email,\n\t\tiDob = dob,\n\t\tiAddress = address,\n\t\tiCity = city,\n\t\tiState = state,\n\t\tiPostCode = postCode,\n\t\tiMembersince = membersince,\n\t\tiSourceLineage = sourceLineage,\n\t\tiFirstName = FirstName,\n\t\tiLastName = LastName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> FixColumnNamesRemoveName\nFixColumnNamesRemoveName derive(iRecMd5Hash = md5(iif(isNull(iEmail),'',toString(iEmail))+ \r\niif(isNull(iDob),'',toString(iDob))+ \r\niif(isNull(iAddress),'',toString(iAddress))+ \r\niif(isNull(iCity),'',toString(iCity))+ \r\niif(isNull(iState),'',toString(iState))+ \r\niif(isNull(iPostCode),'',toString(iPostCode))+ \r\niif(isNull(iMembersince),'',toString(iMembersince))+ \r\niif(isNull(iFirstName),'',toString(iFirstName))+ \r\niif(isNull(iLastName),'',toString(iLastName)))) ~> MD5Hash\nSmartFoodsCustomerSQLDW filter(isNull(RecEndDt)) ~> CurrentRecordsOnly\nMD5Hash, CurrentRecordsOnly join(iLoyaltyNum == LoyaltyNum,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinStagingToDWDim\nJoinStagingToDWDim split(isNull(LoyaltyNum),\n\t!(isNull(LoyaltyNum)) && (iRecMd5Hash !=RecMd5Hash),\n\t!(isNull(LoyaltyNum)) && (iRecMd5Hash == RecMd5Hash),\n\tdisjoint: false) ~> SDC2Split@(New, Changed, Unchanged)\nSDC2Split@New select(mapColumn(\n\t\tLoyalty_num = iLoyalty_num,\n\t\tName = iName,\n\t\tEmail = iEmail,\n\t\tDob = iDob,\n\t\tAddress = iAddress,\n\t\tCity = iCity,\n\t\tState = iState,\n\t\tPostCode = iPostCode,\n\t\tMembersince = iMembersince,\n\t\tSourceLineage = iSourceLineage,\n\t\tFirstName = iFirstName,\n\t\tLastName = tLastName,\n\t\tRecMd5Hash = iRecMd5Hash\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectNewInsert\nSDC2Split@Changed select(mapColumn(\n\t\tCustomerKey,\n\t\tLoyaltyNum,\n\t\tFirstName,\n\t\tLastName,\n\t\tCity,\n\t\tState,\n\t\tEmail,\n\t\tAddress,\n\t\tPostCode,\n\t\tMemberSince,\n\t\tDob,\n\t\tRecInsertDt,\n\t\tRecStartDt,\n\t\tRecMd5Hash,\n\t\tsourceLineage\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectChangedUpdate\nSelectChangedUpdate derive(RecEndDt = toDate($BatchDt, 'yyyy-MM-dd'),\n\t\tRecCurrInd = false()) ~> UpdateRecsBatchColumns\nSDC2Split@Changed select(mapColumn(\n\t\tLoyaltyNum = iLoyalty_num,\n\t\tEmail = iEmail,\n\t\tDob = iDob,\n\t\tAddress = iAddress,\n\t\tCity = iCity,\n\t\tState = iState,\n\t\tPostCode = iPostCode,\n\t\tMembersince = iMembersince,\n\t\tSourceLineage = iSourceLineage,\n\t\tFirstName = iFirstName,\n\t\tLastName = tLastName,\n\t\tRecMd5Hash = iRecMd5Hash\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectChangedInsert\nSelectNewInsert, SelectChangedInsert union(byName: true)~> ALLInserts\nALLInserts keyGenerate(output(CustomerKey as long),\n\tstartAt: 1L) ~> SurrogateKey\nSurrogateKey derive(CustomerKey = CustomerKey+$MaxCustomerKey) ~> MaxCustomerKey\nMaxCustomerKey derive(RecInsertDt = currentDate(),\n\t\tRecCurrInd = true(),\n\t\tRecStartDt = toDate($BatchDt,'yyyy-MM-dd'),\n\t\tRecEnddt = toDate(toString(null()))) ~> InsertRecsBatchColumns\nInsertRecsBatchColumns, UpdateRecsBatchColumns union(byName: true)~> UnionInsertUpdates\nSmartFoodsCustomerStagingBlob sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}